symbol = { 'a'..'z' | 'A'..'Z' | 'а'..'я' | 'А'..'Я' | "_" | '0'..'9' | "+" | "-" | "*" | "=" | "/" | "&" | " " | "!" | "@" | "#" | "$" }
lead_symbol = { "[" ~ symbol ~ "]" }
state = @{ ("q"? ~ '1'..'9' ~ ('0'..'9')*) | "_" | "e" | "!" }
direction = { "L" | "R" | "S" | "<" | ">" | "." | "_" }
number = { '0'..'9'* }

alphabet_declaration = { "alphabet:" ~ (" " ~ symbol)* ~ COMMENT? }
states_declaration = { "states:" ~ (" " ~ state)* ~ COMMENT? }
tape_definition = { "tape:" ~ " "? ~ (symbol | lead_symbol)* ~ COMMENT? }
expect_definition = { "expect:" ~ " "? ~ (symbol)* ~ COMMENT? }
overflow_definition = { "overflow on:" ~ " "? ~ number ~ COMMENT? }

action = { symbol ~ direction ~ state }
root = _{ "[r]" }
column_header = { "\"" ~ symbol ~ "\"" }

state_table_header = { root ~ (" " ~ column_header)* ~ COMMENT? }
state_table_row = { "|" ~ state ~ (" "+ ~ action)* ~ COMMENT? }

state_table = { state_table_header ~ (NEWLINE ~ state_table_row)+ }

file = { alphabet_declaration ~ NEWLINE+ ~ states_declaration ~ NEWLINE+ ~ tape_definition ~ NEWLINE+ ~ (expect_definition ~ NEWLINE+)? ~ (overflow_definition ~ NEWLINE+)? ~ state_table }

COMMENT = _{ " "* ~ "//" ~ (!NEWLINE ~ ANY)* }
